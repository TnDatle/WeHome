import React, { useState } from "react";
import "../Style/Product.css";
import AddProduct from "../Components/AddProduct";

const Product = () => {
  const [showAddModal, setShowAddModal] = useState(false);
  const [editingProduct, setEditingProduct] = useState(null);
  const [selectedProduct, setSelectedProduct] = useState(null);

  const [products, setProducts] = useState([
    {
      id: 1,
      name: "N·ªìi chi√™n kh√¥ng d·∫ßu Lock&Lock 5.5L",
      category: "Thi·∫øt b·ªã nh√† b·∫øp",
      price: 1790000,
      stock: 10,
      image: "/images/noichien.jpg",
      description:
        "Dung t√≠ch 5.5L, c√¥ng ngh·ªá Rapid Air gi·∫£m d·∫ßu t·ªõi 85%, d·ªÖ v·ªá sinh.",
    },
    {
      id: 2,
      name: "M√°y l·ªçc kh√¥ng kh√≠ Sharp FP-J40E-W",
      category: "M√°y l·ªçc kh√¥ng kh√≠",
      price: 2990000,
      stock: 8,
      image: "/images/mayloc.jpg",
      description:
        "Ph√π h·ª£p ph√≤ng 30m¬≤, c√¥ng ngh·ªá Plasmacluster Ion kh·ª≠ m√πi, l·ªçc b·ª•i PM2.5.",
    },
    {
      id: 3,
      name: "ƒê√®n b√†n h·ªçc ch·ªëng c·∫≠n R·∫°ng ƒê√¥ng RD-RL-38",
      category: "ƒê√®n & chi·∫øu s√°ng",
      price: 350000,
      stock: 25,
      image: "/images/denban.jpg",
      description: "ƒê√®n LED √°nh s√°ng trung t√≠nh, b·∫£o v·ªá th·ªã l·ª±c, c·ªï linh ho·∫°t.",
    },
    {
      id: 4,
      name: "C√¢y lau nh√† 360 ƒë·ªô Lock&Lock",
      category: "D·ª•ng c·ª• v·ªá sinh",
      price: 490000,
      stock: 15,
      image: "/images/caulaunha.jpg",
      description:
        "Thi·∫øt k·∫ø xoay 360¬∞, v·∫Øt n∆∞·ªõc nhanh, ƒë·∫ßu lau microfiber si√™u th·∫•m.",
    },
    {
      id: 5,
      name: "V√≤i sen tƒÉng √°p Luva VS3",
      category: "ƒê·ªì d√πng ph√≤ng t·∫Øm",
      price: 189000,
      stock: 30,
      image: "/images/voisen.jpg",
      description: "TƒÉng √°p 200%, ti·∫øt ki·ªám n∆∞·ªõc, 3 ch·∫ø ƒë·ªô phun m·∫°nh nh·∫π.",
    },
    {
      id: 6,
      name: "B√†n ·ªßi h∆°i n∆∞·ªõc Philips GC1740",
      category: "ƒê·ªì ƒëi·ªán gia d·ª•ng nh·ªè",
      price: 790000,
      stock: 18,
      image: "/images/banui.jpg",
      description: "C√¥ng su·∫•t 2000W, phun h∆°i 25g/ph√∫t, ch·ªëng d√≠nh Teflon.",
    },
    {
      id: 7,
      name: "M√°y s·∫•y t√≥c Panasonic EH-ND21",
      category: "ChƒÉm s√≥c c√° nh√¢n",
      price: 420000,
      stock: 22,
      image: "/images/maysaytoc.jpg",
      description: "C√¥ng su·∫•t 1200W, 3 t·ªëc ƒë·ªô s·∫•y, g·∫•p g·ªçn ti·ªán mang ƒëi.",
    },
    {
      id: 8,
      name: "M√°y gi·∫∑t Samsung Inverter 8.5kg",
      category: "Thi·∫øt b·ªã gi·∫∑t s·∫•y",
      price: 6490000,
      stock: 5,
      image: "/images/maygiat.jpg",
      description:
        "C√¥ng ngh·ªá Inverter ti·∫øt ki·ªám ƒëi·ªán, gi·∫∑t nhanh 15 ph√∫t, l·ªìng ƒë·ª©ng.",
    },
    {
      id: 9,
      name: "Robot h√∫t b·ª•i Ecovacs DEEBOT N8 Pro",
      category: "Gia d·ª•ng th√¥ng minh",
      price: 8490000,
      stock: 7,
      image: "/images/robot.jpg",
      description: "H√∫t m·∫°nh 2300Pa, t·ª± ƒë·ªông ƒë·ªï r√°c, b·∫£n ƒë·ªì 3D th√¥ng minh.",
    },
    {
      id: 10,
      name: "ƒê√®n trang tr√≠ ph√≤ng kh√°ch Nordic Style",
      category: "N·ªôi th·∫•t & trang tr√≠",
      price: 1290000,
      stock: 12,
      image: "/images/dentrangtri.jpg",
      description:
        "Thi·∫øt k·∫ø B·∫Øc √Çu hi·ªán ƒë·∫°i, √°nh s√°ng v√†ng ·∫•m, khung kim lo·∫°i s∆°n tƒ©nh ƒëi·ªán.",
    },
  ]);

  const [filter, setFilter] = useState("");
  const [categoryFilter, setCategoryFilter] = useState("T·∫•t c·∫£");

  // ‚úÖ L·ªçc s·∫£n ph·∫©m
  const filteredProducts = products.filter(
    (p) =>
      p.name.toLowerCase().includes(filter.toLowerCase()) &&
      (categoryFilter === "T·∫•t c·∫£" || p.category === categoryFilter)
  );

  // ‚úÖ X√≥a s·∫£n ph·∫©m
  const handleDelete = (id) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh√¥ng?")) {
      setProducts(products.filter((p) => p.id !== id));
    }
  };

  // ‚úÖ L∆∞u s·∫£n ph·∫©m (th√™m / s·ª≠a)
  const handleSaveProduct = (newData) => {
    if (editingProduct) {
      // c·∫≠p nh·∫≠t
      setProducts((prev) =>
        prev.map((p) => (p.id === editingProduct.id ? { ...newData, id: p.id } : p))
      );
    } else {
      // th√™m m·ªõi
      const newId = products.length
        ? Math.max(...products.map((p) => p.id)) + 1
        : 1;
      setProducts([...products, { ...newData, id: newId }]);
    }
  };

  return (
    <div className="product-container">
      <div className="product-header">
        <h4>Qu·∫£n l√Ω s·∫£n ph·∫©m</h4>
        <div className="product-actions">
          <button
            className="btn-add"
            onClick={() => {
              setEditingProduct(null);
              setShowAddModal(true);
            }}
          >
            Th√™m s·∫£n ph·∫©m
          </button>
        </div>
      </div>

      {/* B·ªô l·ªçc */}
      <div className="product-filter">
        <input
          type="text"
          placeholder="üîç T√¨m s·∫£n ph·∫©m..."
          value={filter}
          onChange={(e) => setFilter(e.target.value)}
        />
        <select
          value={categoryFilter}
          onChange={(e) => setCategoryFilter(e.target.value)}
        >
          <option>T·∫•t c·∫£</option>
          <option>Thi·∫øt b·ªã nh√† b·∫øp</option>
          <option>M√°y l·ªçc kh√¥ng kh√≠</option>
          <option>ƒê√®n & chi·∫øu s√°ng</option>
          <option>D·ª•ng c·ª• v·ªá sinh</option>
          <option>ƒê·ªì d√πng ph√≤ng t·∫Øm</option>
          <option>ƒê·ªì ƒëi·ªán gia d·ª•ng nh·ªè</option>
          <option>ChƒÉm s√≥c c√° nh√¢n</option>
          <option>Thi·∫øt b·ªã gi·∫∑t s·∫•y</option>
          <option>Gia d·ª•ng th√¥ng minh</option>
          <option>N·ªôi th·∫•t & trang tr√≠</option>
        </select>
      </div>

      {/* B·∫£ng s·∫£n ph·∫©m */}
      {filteredProducts.length === 0 ? (
        <p className="no-data">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o.</p>
      ) : (
        <table className="product-table">
          <thead>
            <tr>
              <th>H√¨nh ·∫£nh</th>
              <th>T√™n s·∫£n ph·∫©m</th>
              <th>Danh m·ª•c</th>
              <th>Gi√°</th>
              <th>T·ªìn kho</th>
              <th>Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            {filteredProducts.map((p) => (
              <tr key={p.id}>
                <td>
                  <img src={p.image} alt={p.name} className="product-img" />
                </td>
                <td>{p.name}</td>
                <td>{p.category}</td>
                <td>{p.price.toLocaleString()} ‚Ç´</td>
                <td>{p.stock}</td>
                <td>
                  <button onClick={() => setSelectedProduct(p)}>üëÅ Xem</button>
                  <button
                    onClick={() => {
                      setEditingProduct(p);
                      setShowAddModal(true);
                    }}
                  >
                    ‚úèÔ∏è S·ª≠a
                  </button>
                  <button className="danger" onClick={() => handleDelete(p.id)}>
                    üóë X√≥a
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}

      {/* Modal chi ti·∫øt */}
      {selectedProduct && (
        <div className="product-modal">
          <div className="product-modal-content">
            <h5>Chi ti·∫øt s·∫£n ph·∫©m</h5>
            <img
              src={selectedProduct.image}
              alt={selectedProduct.name}
              className="product-modal-img"
            />
            <p>
              <strong>T√™n:</strong> {selectedProduct.name}
            </p>
            <p>
              <strong>Danh m·ª•c:</strong> {selectedProduct.category}
            </p>
            <p>
              <strong>Gi√°:</strong>{" "}
              {selectedProduct.price.toLocaleString()} ‚Ç´
            </p>
            <p>
              <strong>T·ªìn kho:</strong> {selectedProduct.stock}
            </p>
            <p>
              <strong>M√¥ t·∫£:</strong> {selectedProduct.description}
            </p>
            <button
              className="close-btn"
              onClick={() => setSelectedProduct(null)}
            >
              ƒê√≥ng
            </button>
          </div>
        </div>
      )}

      {/* Modal Th√™m / S·ª≠a */}
      {showAddModal && (
        <AddProduct
          onSave={handleSaveProduct}
          onClose={() => setShowAddModal(false)}
          product={editingProduct}
        />
      )}
    </div>
  );
};

export default Product;
