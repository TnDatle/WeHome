import React, { useState, useEffect } from "react";
import "../Style/AddProduct.css";

const AddProduct = ({ onSave, onClose, product }) => {
  const isEdit = !!product; // true n·∫øu ƒëang s·ª≠a

  const [formData, setFormData] = useState({
    name: "",
    category: "",
    price: "",
    stock: "",
    description: "",
    image: "",
  });

  // üîπ N·∫øu ƒëang s·ª≠a, load d·ªØ li·ªáu c≈© v√†o form
  useEffect(() => {
    if (product) setFormData(product);
  }, [product]);

  const categories = [
    "Thi·∫øt b·ªã nh√† b·∫øp",
    "M√°y l·ªçc kh√¥ng kh√≠",
    "ƒê√®n & chi·∫øu s√°ng",
    "D·ª•ng c·ª• v·ªá sinh",
    "ƒê·ªì d√πng ph√≤ng t·∫Øm",
    "ƒê·ªì ƒëi·ªán gia d·ª•ng nh·ªè",
    "ChƒÉm s√≥c c√° nh√¢n",
    "Thi·∫øt b·ªã gi·∫∑t s·∫•y",
    "Gia d·ª•ng th√¥ng minh",
    "N·ªôi th·∫•t & trang tr√≠",
  ];

  // ‚úÖ X·ª≠ l√Ω thay ƒë·ªïi form
  const handleChange = (e) => {
    const { name, value, files } = e.target;
    if (name === "image" && files[0]) {
      setFormData({ ...formData, image: URL.createObjectURL(files[0]) });
    } else {
      setFormData({ ...formData, [name]: value });
    }
  };

  // ‚úÖ Submit form
  const handleSubmit = (e) => {
    e.preventDefault();
    if (!formData.name || !formData.category || !formData.price) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
      return;
    }
    onSave(formData);
    onClose();
  };

  return (
    <div className="add-product-modal">
      <div className="add-product-content">
        <h4>{isEdit ? "‚úèÔ∏è S·ª≠a s·∫£n ph·∫©m" : "‚ûï Th√™m s·∫£n ph·∫©m m·ªõi"}</h4>

        <form onSubmit={handleSubmit}>
          <label>T√™n s·∫£n ph·∫©m</label>
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleChange}
            placeholder="Nh·∫≠p t√™n s·∫£n ph·∫©m..."
          />

          <label>Danh m·ª•c</label>
          <select
            name="category"
            value={formData.category}
            onChange={handleChange}
          >
            <option value="">-- Ch·ªçn danh m·ª•c --</option>
            {categories.map((cat, i) => (
              <option key={i} value={cat}>
                {cat}
              </option>
            ))}
          </select>

          <label>Gi√° (‚Ç´)</label>
          <input
            type="number"
            name="price"
            value={formData.price}
            onChange={handleChange}
            placeholder="Nh·∫≠p gi√° s·∫£n ph·∫©m"
          />

          <label>T·ªìn kho</label>
          <input
            type="number"
            name="stock"
            value={formData.stock}
            onChange={handleChange}
            placeholder="S·ªë l∆∞·ª£ng t·ªìn"
          />

          <label>M√¥ t·∫£</label>
          <textarea
            name="description"
            rows="3"
            value={formData.description}
            onChange={handleChange}
            placeholder="M√¥ t·∫£ ng·∫Øn..."
          />

          <label>·∫¢nh s·∫£n ph·∫©m</label>
          <input type="file" name="image" accept="image/*" onChange={handleChange} />

          {formData.image && (
            <img src={formData.image} alt="preview" className="preview-img" />
          )}

          <div className="btn-group">
            <button type="submit" className="btn-save">
              üíæ {isEdit ? "C·∫≠p nh·∫≠t" : "Th√™m m·ªõi"}
            </button>
            <button type="button" className="btn-cancel" onClick={onClose}>
              H·ªßy
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default AddProduct;
